# web server port setting
server.port=8083
server.session.timeout = 1800
spring.application.name=WORKFLOW

server.error.path=/error2

# web setting
spring.mvc.view.prefix: /WEB-INF/view/
spring.mvc.view.suffix: .jsp
application.message: HELLO WORKFLOW

# thymeleaf setting
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# database settting
spring.datasource.tomcat.maxActive=200
spring.datasource.tomcat.maxIdle=8
spring.datasource.tomcat.minIdle=8
spring.datasource.tomcat.initialSize=10
# mysql settting
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/workflow?useUnicode=true&characterEncoding=utf-8&useSSL=false&autoReconnect=true&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root

# oracle settting
#spring.datasource.driverClassName=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@10.4.247.22:1521:IGRP
#spring.datasource.username=igrp4_develop
#spring.datasource.password=igrp

# mybatis sql setting
mybatis.type-aliases-package=cn.ideal.wfpf.model,cn.ideal.wf.model,cn.ideal.cf.model
mybatis.mapper-locations=classpath*:/mapper/mysql/*Mapper.xml

# logging setting
logging.level.ROOT=INFO
logging.pattern.console=
logging.path=logs
logging.file=${logging.path}/log.log
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %-5level %logger.%M - %msg%n
# special spring package to log
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.transaction=DEBUG

# thymeleaf setting
spring.thymeleaf.cache=false
# sql output setting
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# Redis \u6570\u636e\u5e93\u7d22\u5f15\uff08\u9ed8\u8ba4\u4e3a 0\uff09
spring.redis.database=0
# Redis \u670d\u52a1\u5668\u5730\u5740
spring.redis.host=localhost
# Redis \u670d\u52a1\u5668\u8fde\u63a5\u7aef\u53e3
spring.redis.port=6379  
# Redis \u670d\u52a1\u5668\u8fde\u63a5\u5bc6\u7801\uff08\u9ed8\u8ba4\u4e3a\u7a7a\uff09
spring.redis.password=igrpRedis
# \u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09 \u9ed8\u8ba4 8
spring.redis.lettuce.pool.max-active=8
# \u8fde\u63a5\u6c60\u6700\u5927\u963b\u585e\u7b49\u5f85\u65f6\u95f4\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09 \u9ed8\u8ba4 -1
spring.redis.lettuce.pool.max-wait=-1
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u8fde\u63a5 \u9ed8\u8ba4 8
spring.redis.lettuce.pool.max-idle=8
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5 \u9ed8\u8ba4 0
spring.redis.lettuce.pool.min-idle=0

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.security.enabled=false
management.context-path=/actuator


# \u6d41\u7a0b\u5b9e\u6218\u4e2d\u6d41\u7a0b\u7528\u6237\u7684\u6a21\u62df
# scope=dev\uff0c\u5f00\u53d1\u73af\u5883\u4e0b\uff0c\u7528\u6237\u91c7\u7528\u767b\u9646\u7528\u6237\uff0c\u4e0d\u91c7\u7528\u6d41\u7a0b\u8282\u70b9\u914d\u7f6e\u7684\u7528\u6237
# scope=prod, \u8fd0\u884c\u73af\u5883\u4e0b\uff0c\u7528\u6237\u91c7\u7528\u6d41\u7a0b\u8282\u70b9\u914d\u7f6e\u7684\u7528\u6237\u3002
workflow.user.scope=dev

# \u662f\u5426\u542f\u52a8\u7f13\u5b58\u673a\u5236
# true:\u542f\u52a8
# false:\u4e0d\u542f\u52a8
data.memory.cache=false
# \u7b2c\u4e09\u65b9\u6570\u636e\u63a5\u53e3\u8c03\u7528\u5730\u5740
restful.url=http://localhost:8083


