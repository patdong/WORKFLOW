<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ideal.wfpf.dao.TableMapper">
	<resultMap id="tablebrief" type="cn.ideal.wfpf.model.TableBrief" >
		<id column="tbId" property="tbId" jdbcType="NUMERIC" />
		<id column="wfId" property="wfId" jdbcType="NUMERIC" />
		<association property="wf" column="wfId" select="cn.ideal.wfpf.dao.WorkflowMapper.find" />
		<association property="productCount" column="tbId" select="findProductCount" />
		<association property="layout" column="tbId" select="findTableLayout" />
	</resultMap>
	<resultMap id="tableelement" type="cn.ideal.wfpf.model.TableElement" />			
	<resultMap id="tablebiztemplate" type="cn.ideal.wfpf.model.TableBizTemplate" />		
	
	<select id="findAll" resultMap="tablebrief">
		select * from table_brief 
	</select>
	
	<select id="findAPage" resultMap="tablebrief" parameterType="java.util.Map">
		select * from table_brief order by tbId 
		<if test="recordNumber != null ">
			LIMIT #{recordNumber},#{pageSize}
		</if>	
	</select>
		
	<select id="find" resultMap="tablebrief" parameterType="java.lang.Long">
		select * from table_brief where tbId=#{tbId}
	</select>
	
	<select id="findTableLayout" resultType="cn.ideal.wfpf.model.TableLayout" parameterType="java.lang.Long">
		select a.*,b.tableName as stableName from table_layout a 
		left join table_brief b on b.tbId = a.stbId
		where a.tbId=#{tbId}
	</select>
	
	<select id="findTableLayoutWithScope" resultType="cn.ideal.wfpf.model.TableLayout" parameterType="java.util.Map">
		select * from table_layout where tbId=#{tbId} and scope=#{scope}
	</select>
	
	<insert id="saveTableBrief" useGeneratedKeys="true" keyProperty="tbId" parameterType="cn.ideal.wfpf.model.TableBrief">
		insert into table_brief(
			name,tableName,status,template,createdDate
		)
		values(
			#{name},
			#{tableName},			
			#{status},
			#{template},
			#{createdDate}
		)
	</insert>
	<insert id="saveTableLayout"  parameterType="cn.ideal.wfpf.model.TableLayout">
		insert into table_layout(
			tbId,scope,cols,stbId,border
		)
		values(
			#{tbId},
			#{scope},
			#{cols},
			#{stbId},
			#{border}
		)
	</insert>
	<update id="updateTableBrief" parameterType="cn.ideal.wfpf.model.TableBrief">
		update table_brief set 
			<if test="name != null">
				name=#{name}
			</if>
			<if test="tableName != null">
				tableName=#{tableName}
			</if>
			<if test="template != null">
				template=#{template}
			</if>
			<if test="cols != null">
				cols=#{cols}
			</if>
			<if test="status != null">
				status=#{status}
			</if>
			<if test="wfId != null">
				wfId=#{wfId}
			</if>
			<if test="templateName != null">
				templateName=#{templateName}
			</if>				
		<where>		
			tbId=#{tbId}			
		</where>				
	</update>	
		
	<update id="updateStatusTableBrief" parameterType="cn.ideal.wfpf.model.TableBrief">
		update table_brief set 			
			   status=#{status}
		<where>		
		  tbId=#{tbId}			
		</where>				
	</update>
	
	<insert id="saveTableElement" useGeneratedKeys="true" keyProperty="id" parameterType="cn.ideal.wfpf.model.TableElement">
		insert into table_element(
			tbId,newLabelName,position,newFieldName,newUnit,newFunctionName,functionBelongTo,rowes,cols,width,scope,seq,newHiddenFieldName,
			newDataContent,newFieldType,newFieldDataType,newLength,defaultValue,defaultValueFrom,formula,list,stbId,createdDate
		)
		values		
		(
			#{tbId},			
			#{newLabelName},
			#{position},
			#{newFieldName},
			#{newUnit},
			#{newFunctionName},
			#{functionBelongTo},
			#{rowes},
			#{cols},
			#{width},		
			#{scope},
			#{seq},
			#{newHiddenFieldName},
			#{newDataContent},
			#{newFieldType},
			#{newFieldDataType},
			#{newLength},
			#{defaultValue},
			#{defaultValueFrom},
			#{formula},
			#{list},
			#{stbId},
			#{createdDate}
		)		
	</insert>
	
	<insert id="saveBatchTableElement" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
		insert into table_element(
			tbId,newLabelName,position,newFieldName,newUnit,newFunctionName,functionBelongTo,rowes,cols,width,scope,seq,newHiddenFieldName,
			newDataContent,newFieldType,newFieldDataType,newLength,defaultValue,defaultValueFrom,formula,list,stbId,createdDate
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">				
		(
			#{item.tbId},			
			#{item.newLabelName},
			#{item.position},
			#{item.newFieldName},
			#{item.newUnit},
			#{item.newFunctionName},
			#{item.functionBelongTo},
			#{item.rowes},
			#{item.cols},
			#{item.width},			
			#{item.scope},
			#{item.seq},
			#{item.newHiddenFieldName},
			#{item.newDataContent},
			#{item.newFieldType},
			#{item.newFieldDataType},
			#{item.newLength},
			#{item.defaultValue},
			#{item.defaultValueFrom},
			#{item.formula},
			#{item.list},
			#{item.stbId},
			#{item.createdDate}
		)
		</foreach>
	</insert>
	
	<update id="updateTableElement" parameterType="cn.ideal.wfpf.model.TableElement">
		update table_element set 			
			   newLabelName=#{newLabelName},
			   position=#{position},
			   newFieldName=#{newFieldName},
			   newUnit=#{newUnit},
			   newFunctionName=#{newFunctionName},
			   functionBelongTo=#{functionBelongTo},
			   newHiddenFieldName=#{newHiddenFieldName},
			   newDataContent=#{newDataContent},
			   newFieldType=#{newFieldType},
			   newFieldDataType=#{newFieldDataType},
			   newLength=#{newLength},
			   defaultValue=#{defaultValue},
			   defaultValueFrom=#{defaultValueFrom},
			   formula=#{formula},
			   rowes=#{rowes},
			   cols=#{cols},
			   width=#{width},
			   stbId=#{stbId}
		<where>		
		      id=#{id}		
		</where>				
	</update>
		
	<update id="updateTableElementSeq" parameterType="cn.ideal.wfpf.model.TableElement">
		update table_element set 			
			   seq=#{seq}
		<where>		
		      id=#{id}		
		</where>				
	</update>
	
	<delete id="deleteTableElement" parameterType="java.lang.Long">
		delete from table_element 
		<where>		
		      id=#{id}			
		</where>				
	</delete>
	
	<delete id="deleteTableElementByTbId" parameterType="java.lang.Long">
		delete from table_element 
		<where>		
		      tbId=#{tbId}			
		</where>				
	</delete>
	
	<select id="findTableAllElements" resultMap="tableelement" parameterType="java.util.Map">
		select a.* from table_element a		
		 where a.tbId = #{tbId}
		 <if test="scope != null">
		   and a.scope = #{scope}
		 </if> 
		 order by a.seq
	</select>	
	
	<!-- 用于流程节点上字段的配置、所有列表可操作字段 -->
	<select id="findTableAllFields" resultMap="tableelement" parameterType="java.lang.Long">
		select * from(
			select a.*,b.name as tableName  from table_element a	
			inner join table_brief b on a.tbId = b.tbId		 
			 where a.tbId = #{tbId}		 
			   and a.newFieldType not in ( '标签','子表','组件','列表')
			union all
			 select a.*,b.name as tableName  from table_element a	
			 inner join table_brief b on a.tbId = b.tbId		
			 where a.tbId in (select stbId from table_element where tbId = #{tbId} and newFieldType ='子表')
				and a.newFieldType not in ( '标签','子表','组件','列表')
			union all
			 select a.*,b.name as tableName  from table_element a	
			 inner join table_brief b on a.tbId = b.tbId		
			 where a.tbId in (select stbId from table_element where tbId = #{tbId} and newFieldType ='组件')
				and a.newFieldType not in ( '标签','子表','组件','列表')
			) t
		 order by seq	 
	</select>
	
	<!-- 用于数据库字段检测 -->
	<select id="findTableFieldsToDBCheck" resultMap="tableelement" parameterType="java.lang.Long">
		select a.* from table_element a		
		 where a.tbId = #{tbId}		 
		   and a.newFieldType not in ( '标签','子表','组件','列表')
		 union all
		 select a.* from table_element a		 
		 where a.tbId in (select stbId from table_element where tbId = #{tbId} and newFieldType ='组件')
			and a.newFieldType not in ( '标签','子表','组件','列表')
	</select>
	
	<select id="findTableElement" resultMap="tableelement" parameterType="java.util.Map">
		select a.* from table_element a
		 where a.tbId = #{tbId}
	</select>
	
	<update id="updateTableElementList" parameterType="java.util.Map">
		update table_element set 			
			   list='有效'
		<where>		
		      tbId=#{tbId}
		  and id in
          <foreach collection="ids" item="item" index="index" open="(" close=")"  separator=",">
              ${item}
          </foreach>			
		</where>				
	</update>
	
	<update id="resetTableElementList" parameterType="java.lang.Long">
		update table_element set 			
			   list='无效'
		<where>		
		      tbId=#{tbId}		 	
		</where>				
	</update>
	
	<select id="findElementsOnList" resultMap="tableelement" parameterType="java.lang.Long">
		select a.* from table_element a
		 where a.tbId = #{tbId} 
		   and a.list = '有效'
	  order by seq
	</select>
		
	<select id="findAllWithTableName" resultMap="tablebrief">
		select * from table_brief where tableName is not null
	</select>	
	
	<select id="findTableListLevelElements" resultMap="tableelement" parameterType="java.lang.Long">
		select a.* from table_element a
		 where a.tbId = #{tbId}
		   and a.newFieldType not in ( '标签','子表','列表')
	</select>
	
	<!-- 获取流程节点设置的字段 -->
	<select id="findTableAllElementsOnNode" resultMap="tableelement" parameterType="java.util.Map">
		select a.*,c.required from table_element a
		 inner join table_brief b on b.tbId = a.tbId 
		 inner join workflow_table_element c on b.wfId = c.wfId and a.id=c.id
		 where a.tbId = #{tbId}
		   and b.wfId = #{wfId}
		   and c.nodeId = #{nodeId}
		   and a.newFieldType !='标签'
		 order by a.seq
	</select>
	
	<insert id="saveTableElementOnNode" parameterType="java.util.Map">
		delete from workflow_table_element where wfId = #{wfId} and nodeId = #{nodeId};
		insert into workflow_table_element(
			wfId,nodeId,nodeName,id,required
		)
		values
		<foreach collection="teLst" item="item" index="index" separator=",">				
		(
			#{wfId},
			#{nodeId},
			#{nodeName},
			#{item.id},
			#{item.required}
		)
		</foreach>
	</insert>
		
	<select id="findAllWithTableNameNoRelated" resultMap="tablebrief">
		select * from table_brief 
		where tableName is not null
		  and template = '表'
		  and tbId not in (select tbId from workflow where status = '有效' and tbId is not null)
	</select>
		
	<delete id="deleteTableBrief" parameterType="java.lang.Long">
		delete from table_brief 
		<where>		
		      tbId=#{tbId}		  	
		</where>				
	</delete>	
		
	<!-- 获得生产数据 -->
	<select id="findProductCount" resultType="java.lang.Long">
		select count(a.wfId) from table_summary a
		inner join workflow b on a.wfId = b.wfId
		where b.tbId = #{tbId}
	</select>
	
	<select id="findMaxSeq" resultType="java.lang.Long" parameterType="java.lang.Long">
		select max(a.seq) as seq from table_element a
		 where a.tbId = #{tbId}		  
	</select>
		
	<delete id="deleteLayout" parameterType="java.util.Map">
		delete from table_layout
		<where>		
		      tbId=#{tbId}
		  <if test="scope != null">
		  and scope=#{scope}
		  </if>		  	  
		</where>				
	</delete>
	
	<select id="findLayout" resultType="cn.ideal.wfpf.model.TableLayout" parameterType="java.util.Map">
		select * from table_layout 
		 where tbId = #{tbId} 
		   and scope = #{scope}
	</select>
	
	<select id="findAllSubTables" resultMap="tablebrief" parameterType="java.lang.Long">
		select * from table_brief 
		 where tbId != #{tbId} 
		   and status='有效' 
		   and tableName is not null 
		   and template = '子表'
	</select>
	
	<update id="setSubTable" parameterType="java.util.Map">
		update table_layout set 			
			   stbId=#{stbId}
		<where>		
		       tbId=#{tbId}	
		   and scope=#{scope}	 	
		</where>				
	</update>
	
	<select id="findSubTable" resultMap="tablebrief" parameterType="java.util.Map">
		select * from table_brief where tbId in (select stbId from table_layout where tbId = #{tbId} and scope = #{scope})
	</select>	
	
	<select id="findTableBriefWithTemplate" resultMap="tablebrief" parameterType="java.lang.String">
		select * from table_brief where template=#{template} and status = '有效' and name is not null
	</select>
	
	<update id="removeBinding" parameterType="java.lang.Long">
		update table_brief set 			
			wfId = null 
			where tbId = #{tbId}
	</update>
	
	<select id="findByWfId" resultMap="tablebrief" parameterType="java.lang.Long">
		select * from table_brief where wfId = #{wfId}
	</select>
	
	<update id="updateTableBriefToNull" parameterType="cn.ideal.wfpf.model.TableBrief">
		update table_brief set 
			   tbId = #{tbId}
			<if test="name == null">
				,name=null
			</if>
			<if test="tableName == null">
				,tableName=null
			</if>			
			<if test="cols == null">
				,cols=null
			</if>
			<if test="wfId == null">
				,wfId=null
			</if>				
		<where>		
			tbId=#{tbId}			
		</where>				
	</update>
		
	<select id="findAllBizTemplates" resultMap="tablebiztemplate">
		select * from table_biz_template 
	</select>
	
	<select id="findByTableName" resultMap="tablebrief" parameterType="java.util.Map">
		select * from table_brief where tableName=#{tableName} and tbId != #{tbId}
	</select>
	
	<select id="findByAlias" resultMap="tablebrief" parameterType="java.util.Map">
		select * from table_brief where alias=#{alias} and tbId != #{tbId}
	</select>
</mapper>
