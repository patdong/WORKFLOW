<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ideal.wfpf.dao.TableMapper">
	<resultMap id="tablebrief" type="cn.ideal.wfpf.model.TableBrief" />
	<resultMap id="tableelement" type="cn.ideal.wfpf.model.TableElement" />			
	
	<select id="findAll" resultMap="tablebrief">
		select * from table_brief 
	</select>
	
	<select id="findAPage" resultMap="tablebrief" parameterType="java.util.Map">
		select * from table_brief	order by tbId 
		<if test="recordNumber != null ">
			LIMIT #{recordNumber},#{pageSize}
		</if>	
	</select>
		
	<select id="find" resultMap="tablebrief" parameterType="java.lang.Long">
		select * from table_brief where tbId=#{tbId}
	</select>
	
	<insert id="saveTableBrief" useGeneratedKeys="true" keyProperty="tbId" parameterType="cn.ideal.wfpf.model.TableBrief">
		insert into table_brief(
			name,tableName,cols,status,createdDate
		)
		values(
			#{name},
			#{tableName},
			#{cols},
			#{status},
			#{createdDate}
		)
	</insert>
	
	<update id="updateTableBrief" parameterType="cn.ideal.wfpf.model.TableBrief">
		update table_brief set 
			<if test="name != null">
				name=#{name}
			</if>
			<if test="tableName != null">
				tableName=#{tableName}
			</if>
			<if test="template != null">
				template=#{template},
			</if>
			<if test="cols != null">
				cols=#{cols}
			</if>				
		<where>		
			tbId=#{tbId}			
		</where>				
	</update>	
		
	<update id="updateStatusTableBrief" parameterType="cn.ideal.wfpf.model.TableBrief">
		update table_brief set 			
			   status=#{status}
		<where>		
		  tbId=#{tbId}			
		</where>				
	</update>
	
	
	<insert id="saveBatchTableElement" parameterType="java.util.List">
		insert into table_element(
			tbId,emId,newLabelName,newFunctionName,scope,seq,newHiddenFieldName,
			newDataContent,newFieldType,newFieldDataType,newLength,createdDate
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">				
		(
			#{item.tbId},
			#{item.emId},
			#{item.newLabelName},
			#{item.newFunctionName},			
			#{item.scope},
			#{item.seq},
			#{item.newHiddenFieldName},
			#{item.newDataContent},
			#{item.newFieldType},
			#{item.newFieldDataType},
			#{item.newLength},
			#{item.createdDate}
		)
		</foreach>
	</insert>
		
	<update id="updateTableElementSeq" parameterType="cn.ideal.wfpf.model.TableElement">
		update table_element set 			
			   seq=#{seq}
		<where>		
		      tbId=#{tbId}
		  and emId = #{emId}			
		</where>				
	</update>
	
	<delete id="deleteTableElement" parameterType="java.util.Map">
		delete from table_element 
		<where>		
		      tbId=#{tbId}
		  and emId = #{emId}			
		</where>				
	</delete>
	
	<select id="findAllTableElements" resultMap="tableelement" parameterType="java.util.Map">
		select a.*,b.labelName,b.fieldName from table_element a
		 inner join element_library b on a.emId = b.emId 
		 where a.tbId = #{tbId}
		 <if test="scope != null">
		   and a.scope = #{scope}
		 </if> 
		 order by a.seq
	</select>	
	
	<select id="findTableElement" resultMap="tableelement" parameterType="java.util.Map">
		select a.* from table_element a
		 where a.tbId = #{tbId} 
		   and a.emId = #{emId}
	</select>
	
	<update id="updateTableElementList" parameterType="java.util.Map">
		update table_element set 			
			   list='有效'
		<where>		
		      tbId=#{tbId}
		  and emId in
          <foreach collection="emIds" item="item" index="index" open="(" close=")"  separator=",">
              ${item}
          </foreach>			
		</where>				
	</update>
	
	<update id="resetTableElementList" parameterType="java.lang.Long">
		update table_element set 			
			   list='无效'
		<where>		
		      tbId=#{tbId}		 	
		</where>				
	</update>
	
	<select id="findElementsOnList" resultMap="tableelement" parameterType="java.lang.Long">
		select a.* from table_element a
		 where a.tbId = #{tbId} 
		   and a.list = '有效'
	  order by seq
	</select>
		
	<select id="findAllWithTableName" resultMap="tablebrief">
		select * from table_brief where tableName is not null
	</select>
</mapper>
